import React, { useEffect, useMemo, useRef, useState } from 'react'
const ADMIN_PHONE = import.meta.env.VITE_ADMIN_PHONE || '+84944301226'
const CYCLE_SECONDS = 30
const FAPI_TIME = 'https://fapi.binance.com/fapi/v1/time'
const WS_TRADE = 'wss://fstream.binance.com/ws/btcusdt@trade'
const WS_MARK = 'wss://fstream.binance.com/ws/btcusdt@markPrice@1s'
const WINDOW_SECONDS = 120
const clamp=(x,a,b)=>Math.min(b,Math.max(a,x))
const sigmoid=(x)=>1/(1+Math.exp(-Math.max(-20,Math.min(20,x))))
function useServerClockSync(){const[off,setOff]=useState(0);useEffect(()=>{const sync=async()=>{try{const t0=performance.now();const r=await fetch(FAPI_TIME,{cache:'no-store'});const t1=performance.now();const j=await r.json();const mid=(t0+t1)/2;const epochMid=Date.now()+(mid-performance.now());setOff(j.serverTime-epochMid)}catch{}};sync();const id=setInterval(sync,120000);return()=>clearInterval(id)},[]);return{nowServer:()=>Date.now()+off}}
function useBinanceStream(provider){const[prices,setPrices]=useState([]);const lastSec=useRef(null);const lastPrice=useRef(null);useEffect(()=>{let ws,alive=true;const open=()=>{const url=provider==='mark'?WS_MARK:WS_TRADE;ws=new WebSocket(url);ws.onopen=()=>console.log('ws open',url);ws.onclose=()=>{if(alive)setTimeout(open,1500)};ws.onerror=()=>{try{ws.close()}catch{}};ws.onmessage=(ev)=>{try{const o=JSON.parse(ev.data);const p=parseFloat(o.p??o.data?.p??o.c??o.data?.c);const e=(o.E??o.data?.E??Date.now())/1000;const s=Math.floor(e);if(Number.isFinite(p)){lastPrice.current=p;if(lastSec.current==null)lastSec.current=s;if(s!==lastSec.current){const arr=[];for(let i=lastSec.current+1;i<=s;i++){arr.push({tsSec:i,price:lastPrice.current})}lastSec.current=s;setPrices(prev=>[...prev,...arr].slice(-WINDOW_SECONDS))}}}catch{}}};open();return()=>{alive=false;try{ws&&ws.close()}catch{}}},[provider]);return prices}
function computeDecision(prices){if(!prices.length)return{decision:null,prob:0.5,r5:0,r15:0,vol:0,p:0};const pNow=prices.at(-1).price;const ts=prices.at(-1).tsSec;const map=new Map(prices.map(x=>[x.tsSec,x.price]));const get=(ago)=>map.get(ts-ago);const p5=get(5),p15=get(15);if(!p5||!p15)return{decision:null,prob:0.5,r5:0,r15:0,vol:0,p:pNow};const r5=(pNow-p5)/p5;const r15=(pNow-p15)/p15;const score=0.7*r5+0.3*r15;const rets=[];for(let b=1;b<=20;b++){const a=get(b+1),bp=get(b);if(a&&bp)rets.push((bp-a)/a)}const m=rets.reduce((s,x)=>s+x,0)/Math.max(1,rets.length);const v=rets.reduce((s,x)=>s+(x-m)*(x-m),0)/Math.max(1,rets.length);const vol=Math.sqrt(v)||1e-6;const strength=Math.abs(score)/(vol+1e-8);let prob=sigmoid(strength);prob=clamp(prob,0.5,0.9);const side=score>=0?'BUY':'SELL';if(side==='SELL')prob=1-(prob-0.5);return{decision:side,prob,r5,r15,vol,p:pNow}}
function useCountdown(nowServer){const[,setT]=useState(0);useEffect(()=>{const id=setInterval(()=>setT(x=>x+1),1000);return()=>clearInterval(id)},[]);const nowSec=Math.floor(nowServer()/1000);const inCycle=nowSec%CYCLE_SECONDS;return{toBoundary:CYCLE_SECONDS-inCycle}}
function Info({label,value}){return(<div className='p-3 rounded-xl bg-slate-800/50 border border-slate-700'><div className='text-slate-400 text-xs'>{label}</div><div className='font-semibold'>{value}</div></div>)}
function Dashboard(){const[provider,setProvider]=useState('mark');const{nowServer}=useServerClockSync();const{toBoundary}=useCountdown(nowServer);const prices=useBinanceStream(provider);const s=useMemo(()=>computeDecision(prices),[prices]);const cls=s.decision==='BUY'?'text-emerald-400':s.decision==='SELL'?'text-rose-400':'text-slate-300';return(<div className='min-h-screen bg-slate-950 text-slate-100'><header className='flex items-center justify-between px-6 py-4 border-b border-slate-800 bg-slate-900/40'><div className='flex items-center gap-3'><div className='w-8 h-8 rounded-xl bg-indigo-600 grid place-items-center font-bold'>T</div><h1 className='text-lg font-semibold'>toolmoniq</h1><span className='px-2 py-1 rounded-full text-xs ml-2 bg-emerald-600/30 text-emerald-200'>Admin</span></div><div className='flex items-center gap-3 text-sm'><span className='px-3 py-1 rounded-full bg-slate-800/60 border border-slate-700'>Chu kỳ: {CYCLE_SECONDS}s</span><span className='px-3 py-1 rounded-full bg-slate-800/60 border border-slate-700'>Tới mốc: {toBoundary}s</span></div></header><main className='max-w-6xl mx-auto p-6 grid md:grid-cols-3 gap-6'><div className='md:col-span-2 bg-slate-900/40 rounded-2xl border border-slate-800 p-5'><h2 className='text-base text-slate-300 mb-3'>Tín hiệu BTCUSDT (Binance Futures)</h2><div className='h-56 grid place-items-center text-slate-400'>Biểu đồ (rút gọn demo)</div></div><div className='bg-slate-900/40 rounded-2xl border border-slate-800 p-5'><h2 className='text-base text-slate-300 mb-3'>Dự đoán cây nến kế tiếp</h2><div className='text-4xl font-bold mb-2 leading-tight'><span className={cls}>{s.decision||'...'}</span></div><div className='text-slate-300 mb-4'>Độ tự tin ≈ {(s.prob*100).toFixed(1)}%</div><div className='grid grid-cols-2 gap-3 text-sm'><Info label='Giá' value={s.p?.toLocaleString(undefined,{maximumFractionDigits:2})||'...'} /><Info label='r5 (bp)' value={(s.r5*1e4).toFixed(1)} /><Info label='r15 (bp)' value={(s.r15*1e4).toFixed(1)} /><Info label='vol20s (bp)' value={(s.vol*1e4).toFixed(1)} /></div><div className='mt-6 border-t border-slate-800 pt-4'><label className='text-sm text-slate-300'>Nguồn giá</label><div className='flex gap-2 mt-2'><button onClick={()=>setProvider('mark')} className={`px-3 py-1 rounded-xl border ${provider==='mark'?'bg-indigo-600 border-indigo-500':'bg-slate-800 border-slate-700 hover:bg-slate-700'}`}>Mark</button><button onClick={()=>setProvider('trade')} className={`px-3 py-1 rounded-xl border ${provider==='trade'?'bg-indigo-600 border-indigo-500':'bg-slate-800 border-slate-700 hover:bg-slate-700'}`}>Trade</button></div><p className='text-xs text-slate-400 mt-2'>Chọn <b>Mark</b> nếu MonIQ chấm theo Mark Price.</p></div></div></main><footer className='max-w-6xl mx-auto px-6 pb-8 text-xs text-slate-500'>© {new Date().getFullYear()} toolmoniq — for educational use only.</footer></div>)}
export default function App(){return <Dashboard/>}
